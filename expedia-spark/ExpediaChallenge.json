{"paragraphs":[{"text":"%md\nI'll solve the [Expedia Hotel Recommendation Kaggle Challenge](https://www.kaggle.com/c/expedia-hotel-recommendations/data).\n\nThis uses the [spark-csv](https://github.com/databricks/spark-csv) repo for loading from a CSV.\n\nFirst step is to **load the data**","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:02 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462479120941_1216601629","id":"20160505-161200_613961207","result":{"code":"SUCCESS","type":"HTML","msg":"<p>I'll solve the <a href=\"https://www.kaggle.com/c/expedia-hotel-recommendations/data\">Expedia Hotel Recommendation Kaggle Challenge</a>.</p>\n<p>This uses the <a href=\"https://github.com/databricks/spark-csv\">spark-csv</a> repo for loading from a CSV.</p>\n<p>First step is to <strong>load the data</strong></p>\n"},"dateCreated":"May 5, 2016 4:12:00 PM","dateStarted":"May 6, 2016 12:45:02 PM","dateFinished":"May 6, 2016 12:45:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:155"},{"text":"// Read the CSV file.\nval pathToInputFile = \"/Users/harihar/ExpediaData/sample.csv\"\nval trainingDf = sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\")\n    .option(\"inferSchema\", \"true\")\n    .load(pathToInputFile)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:02 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462494918128_201120854","id":"20160505-203518_1920331355","result":{"code":"SUCCESS","type":"TEXT","msg":"pathToInputFile: String = /Users/harihar/ExpediaData/sample.csv\ntrainingDf: org.apache.spark.sql.DataFrame = [date_time: timestamp, site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_ci: string, srch_co: string, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int]\n"},"dateCreated":"May 5, 2016 8:35:18 PM","dateStarted":"May 6, 2016 12:45:03 PM","dateFinished":"May 6, 2016 12:45:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:156"},{"text":"// Create convenient column lists.\nval dateCols = Array(\"date_time\", \"srch_ci\", \"srch_co\")\nval nonDateCols = trainingDf.columns.diff(dateCols)\nval labelCol = Array(\"hotel_cluster\")\nval categoricalCols = Array(\n    \"site_name\",\n    \"posa_continent\",\n    \"user_location_country\",\n    \"user_location_region\",\n    \"user_location_city\",\n    \"user_id\",\n    \"channel\",\n    \"srch_destination_id\",\n    \"srch_destination_type_id\",\n    \"hotel_continent\",\n    \"hotel_country\",\n    \"hotel_market\"\n)\nval nonCategoricalNonDateCols = nonDateCols.diff(categoricalCols ++ labelCol)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462494976255_-417662646","id":"20160505-203616_1470480129","result":{"code":"SUCCESS","type":"TEXT","msg":"dateCols: Array[String] = Array(date_time, srch_ci, srch_co)\nnonDateCols: Array[String] = Array(site_name, posa_continent, user_location_country, user_location_region, user_location_city, orig_destination_distance, user_id, is_mobile, is_package, channel, srch_adults_cnt, srch_children_cnt, srch_rm_cnt, srch_destination_id, srch_destination_type_id, is_booking, cnt, hotel_continent, hotel_country, hotel_market, hotel_cluster)\nlabelCol: Array[String] = Array(hotel_cluster)\ncategoricalCols: Array[String] = Array(site_name, posa_continent, user_location_country, user_location_region, user_location_city, user_id, channel, srch_destination_id, srch_destination_type_id, hotel_continent, hotel_country, hotel_market)\nnonCategoricalNonDateCols: Array[String] = Array(orig_destination_distance, is_mobile, is_package, srch_adults_cnt, srch_children_cnt, srch_rm_cnt, is_booking, cnt)\n"},"dateCreated":"May 5, 2016 8:36:16 PM","dateStarted":"May 6, 2016 12:45:05 PM","dateFinished":"May 6, 2016 12:45:26 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:157","focus":true},{"text":"// Remove the date columns.\nval trainingDfNoDateCols = trainingDf.select(nonDateCols.head, nonDateCols.tail: _*)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462495073991_-2064818660","id":"20160505-203753_969974707","result":{"code":"SUCCESS","type":"TEXT","msg":"trainingDfNoDateCols: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int]\n"},"dateCreated":"May 5, 2016 8:37:53 PM","dateStarted":"May 6, 2016 12:45:24 PM","dateFinished":"May 6, 2016 12:45:27 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:158"},{"text":"// Remove the nulls.\nimport org.apache.spark.sql.Row\nval trainingDfNoNulls = sqlContext.createDataFrame(trainingDfNoDateCols.map { row =>\n    Row.fromSeq(row.toSeq.zipWithIndex.map { case (item, index) =>\n        if (item == null) {\n            if (index == 5) 0.0 else 0\n        } else {\n            item\n        }\n    })\n}, trainingDfNoDateCols.schema)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462495113008_-1752001956","id":"20160505-203833_457222933","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.sql.Row\ntrainingDfNoNulls: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int]\n"},"dateCreated":"May 5, 2016 8:38:33 PM","dateStarted":"May 6, 2016 12:45:27 PM","dateFinished":"May 6, 2016 12:45:29 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:159"},{"text":"// Display the columns.\ntrainingDfNoNulls.schema\n    .zipWithIndex\n    .map { case (field, index) => \n        (index, field.name, field.dataType)\n    }\n    .foreach(println)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462495208449_1581816615","id":"20160505-204008_446278413","result":{"code":"SUCCESS","type":"TEXT","msg":"(0,site_name,IntegerType)\n(1,posa_continent,IntegerType)\n(2,user_location_country,IntegerType)\n(3,user_location_region,IntegerType)\n(4,user_location_city,IntegerType)\n(5,orig_destination_distance,DoubleType)\n(6,user_id,IntegerType)\n(7,is_mobile,IntegerType)\n(8,is_package,IntegerType)\n(9,channel,IntegerType)\n(10,srch_adults_cnt,IntegerType)\n(11,srch_children_cnt,IntegerType)\n(12,srch_rm_cnt,IntegerType)\n(13,srch_destination_id,IntegerType)\n(14,srch_destination_type_id,IntegerType)\n(15,is_booking,IntegerType)\n(16,cnt,IntegerType)\n(17,hotel_continent,IntegerType)\n(18,hotel_country,IntegerType)\n(19,hotel_market,IntegerType)\n(20,hotel_cluster,IntegerType)\n"},"dateCreated":"May 5, 2016 8:40:08 PM","dateStarted":"May 6, 2016 12:45:27 PM","dateFinished":"May 6, 2016 12:45:30 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:160"},{"text":"%md\nNow, I want to build a preprocessing pipeline which will construct the feature vector.","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462494883765_71213644","id":"20160505-203443_395060694","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Now, I want to build a preprocessing pipeline which will construct the feature vector.</p>\n"},"dateCreated":"May 5, 2016 8:34:43 PM","dateStarted":"May 6, 2016 12:45:04 PM","dateFinished":"May 6, 2016 12:45:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:161"},{"text":"// Make preprocessing pipeline.\nimport org.apache.spark.ml.feature.{VectorAssembler, VectorIndexer, StringIndexer, StandardScaler}\nimport org.apache.spark.ml.Pipeline\n\n// Assemble vectors together.\nval assembledCols = nonCategoricalNonDateCols ++ categoricalCols\nval assembler = new VectorAssembler()\n    .setInputCols(assembledCols)\n    .setOutputCol(\"features\")\n    \n// Convert categorical cols into vectors.\nval vectorIndexer = new VectorIndexer()\n    .setInputCol(\"features\")\n    .setOutputCol(\"indexed_features\")\n    .setMaxCategories(100) // If there are < 100 distinct values, call it categorical.\n\n// Index the label.\nval labelIndexer = new StringIndexer()\n    .setInputCol(\"hotel_cluster\")\n    .setOutputCol(\"indexed_label\")\n    \n// Create the preprocessing pipeline.\nval preprocessingPipeline = new Pipeline()\n    .setStages(Array(assembler, vectorIndexer, labelIndexer))\nval preprocessingPipelineModel = preprocessingPipeline.fit(trainingDfNoNulls)\n\n// Preprocessed data.\nval preprocessedData = preprocessingPipelineModel.transform(trainingDfNoNulls)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462495332131_-781125595","id":"20160505-204212_1652794402","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.feature.{VectorAssembler, VectorIndexer, StringIndexer, StandardScaler}\nimport org.apache.spark.ml.Pipeline\nassembledCols: Array[String] = Array(orig_destination_distance, is_mobile, is_package, srch_adults_cnt, srch_children_cnt, srch_rm_cnt, is_booking, cnt, site_name, posa_continent, user_location_country, user_location_region, user_location_city, user_id, channel, srch_destination_id, srch_destination_type_id, hotel_continent, hotel_country, hotel_market)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_b9f4008132b0\nvectorIndexer: org.apache.spark.ml.feature.VectorIndexer = vecIdx_21e88a069d80\nlabelIndexer: org.apache.spark.ml.feature.StringIndexer = strIdx_e16f8f8a8c3b\npreprocessingPipeline: org.apache.spark.ml.Pipeline = pipeline_6a7ac458693d\npreprocessingPipelineModel: org.apache.spark.ml.PipelineModel = pipeline_6a7ac458693d\npreprocessedData: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int, features: vector, indexed_features: vector, indexed_label: double]\n"},"dateCreated":"May 5, 2016 8:42:12 PM","dateStarted":"May 6, 2016 12:45:30 PM","dateFinished":"May 6, 2016 12:45:41 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:162"},{"text":"import org.apache.spark.ml.attribute.AttributeGroup\n\n// Print the attributes of the indexed features..\nval indexedFeaturesField = preprocessedData.select(\"indexed_features\").schema.head\nAttributeGroup.fromStructField(indexedFeaturesField).attributes.get.map { attr =>\n    (attr.index.get, attr.name.get, attr.attrType)\n}.foreach(println)","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:03 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462495628679_1795333641","id":"20160505-204708_1004147503","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.attribute.AttributeGroup\nindexedFeaturesField: org.apache.spark.sql.types.StructField = StructField(indexed_features,org.apache.spark.mllib.linalg.VectorUDT@f71b0bce,true)\n(0,orig_destination_distance,Numeric)\n(1,is_mobile,Binary)\n(2,is_package,Binary)\n(3,srch_adults_cnt,Nominal)\n(4,srch_children_cnt,Nominal)\n(5,srch_rm_cnt,Nominal)\n(6,is_booking,Binary)\n(7,cnt,Nominal)\n(8,site_name,Nominal)\n(9,posa_continent,Nominal)\n(10,user_location_country,Numeric)\n(11,user_location_region,Numeric)\n(12,user_location_city,Numeric)\n(13,user_id,Numeric)\n(14,channel,Nominal)\n(15,srch_destination_id,Numeric)\n(16,srch_destination_type_id,Nominal)\n(17,hotel_continent,Nominal)\n(18,hotel_country,Numeric)\n(19,hotel_market,Numeric)\n"},"dateCreated":"May 5, 2016 8:47:08 PM","dateStarted":"May 6, 2016 12:45:30 PM","dateFinished":"May 6, 2016 12:45:42 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:163"},{"text":"%md\nNow, with the preprocessed data `preprocessedData`, I want to see how unbalanced the classes are.","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:04 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462479373262_1064790566","id":"20160505-161613_1443499377","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Now, with the preprocessed data <code>preprocessedData</code>, I want to see how unbalanced the classes are.</p>\n"},"dateCreated":"May 5, 2016 4:16:13 PM","dateStarted":"May 6, 2016 12:45:04 PM","dateFinished":"May 6, 2016 12:45:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:164"},{"text":"preprocessedData.registerTempTable(\"preproc\")","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:04 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462551986086_-1162329963","id":"20160506-122626_469144213","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"May 6, 2016 12:26:26 PM","dateStarted":"May 6, 2016 12:45:41 PM","dateFinished":"May 6, 2016 12:45:43 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:165"},{"text":"%sql\nSELECT hotel_cluster, COUNT(*) FROM preproc GROUP BY hotel_cluster","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:04 PM","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"hotel_cluster","index":0,"aggr":"sum"}],"values":[{"name":"_c1","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"hotel_cluster","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462552002834_464819108","id":"20160506-122642_1301195389","result":{"code":"SUCCESS","type":"TABLE","msg":"hotel_cluster\t_c1\n31\t2589\n32\t2886\n33\t4098\n34\t3138\n35\t1463\n36\t4335\n37\t4993\n38\t2618\n39\t3429\n40\t4304\n41\t7653\n42\t5507\n43\t2527\n44\t3036\n45\t2529\n46\t5409\n47\t4357\n48\t7516\n49\t2339\n50\t4842\n51\t3834\n52\t3400\n53\t1345\n54\t2537\n55\t4188\n56\t3877\n57\t3137\n58\t4838\n59\t5794\n60\t2178\n61\t3976\n62\t5258\n63\t3010\n64\t6937\n65\t6650\n66\t2658\n67\t2529\n68\t5107\n69\t3383\n70\t5473\n71\t2253\n72\t4581\n73\t3306\n74\t457\n75\t1600\n76\t3179\n77\t4025\n78\t3699\n79\t2725\n80\t2235\n81\t3497\n82\t4949\n83\t5343\n84\t2715\n85\t3610\n86\t2063\n87\t2570\n88\t1079\n89\t2446\n90\t3959\n91\t10435\n92\t2471\n93\t2136\n94\t2919\n95\t5121\n96\t3652\n97\t4695\n98\t5890\n99\t4469\n0\t3843\n1\t4571\n2\t4362\n3\t2238\n4\t3402\n5\t6113\n6\t3847\n7\t2534\n8\t3299\n9\t4966\n10\t4067\n11\t3547\n12\t2602\n13\t3427\n14\t1971\n15\t3239\n16\t4791\n17\t3550\n18\t5385\n19\t2835\n20\t3099\n21\t5463\n22\t2855\n23\t2551\n24\t1688\n25\t5363\n26\t3786\n27\t1086\n28\t5031\n29\t4055\n30\t4951\n","comment":"","msgTable":[[{"key":"_c1","value":"31"},{"key":"_c1","value":"2589"}],[{"value":"32"},{"value":"2886"}],[{"value":"33"},{"value":"4098"}],[{"value":"34"},{"value":"3138"}],[{"value":"35"},{"value":"1463"}],[{"value":"36"},{"value":"4335"}],[{"value":"37"},{"value":"4993"}],[{"value":"38"},{"value":"2618"}],[{"value":"39"},{"value":"3429"}],[{"value":"40"},{"value":"4304"}],[{"value":"41"},{"value":"7653"}],[{"value":"42"},{"value":"5507"}],[{"value":"43"},{"value":"2527"}],[{"value":"44"},{"value":"3036"}],[{"value":"45"},{"value":"2529"}],[{"value":"46"},{"value":"5409"}],[{"value":"47"},{"value":"4357"}],[{"value":"48"},{"value":"7516"}],[{"value":"49"},{"value":"2339"}],[{"value":"50"},{"value":"4842"}],[{"value":"51"},{"value":"3834"}],[{"value":"52"},{"value":"3400"}],[{"value":"53"},{"value":"1345"}],[{"value":"54"},{"value":"2537"}],[{"value":"55"},{"value":"4188"}],[{"value":"56"},{"value":"3877"}],[{"value":"57"},{"value":"3137"}],[{"value":"58"},{"value":"4838"}],[{"value":"59"},{"value":"5794"}],[{"value":"60"},{"value":"2178"}],[{"value":"61"},{"value":"3976"}],[{"value":"62"},{"value":"5258"}],[{"value":"63"},{"value":"3010"}],[{"value":"64"},{"value":"6937"}],[{"value":"65"},{"value":"6650"}],[{"value":"66"},{"value":"2658"}],[{"value":"67"},{"value":"2529"}],[{"value":"68"},{"value":"5107"}],[{"value":"69"},{"value":"3383"}],[{"value":"70"},{"value":"5473"}],[{"value":"71"},{"value":"2253"}],[{"value":"72"},{"value":"4581"}],[{"value":"73"},{"value":"3306"}],[{"value":"74"},{"value":"457"}],[{"value":"75"},{"value":"1600"}],[{"value":"76"},{"value":"3179"}],[{"value":"77"},{"value":"4025"}],[{"value":"78"},{"value":"3699"}],[{"value":"79"},{"value":"2725"}],[{"value":"80"},{"value":"2235"}],[{"value":"81"},{"value":"3497"}],[{"value":"82"},{"value":"4949"}],[{"value":"83"},{"value":"5343"}],[{"value":"84"},{"value":"2715"}],[{"value":"85"},{"value":"3610"}],[{"value":"86"},{"value":"2063"}],[{"value":"87"},{"value":"2570"}],[{"value":"88"},{"value":"1079"}],[{"value":"89"},{"value":"2446"}],[{"value":"90"},{"value":"3959"}],[{"value":"91"},{"value":"10435"}],[{"value":"92"},{"value":"2471"}],[{"value":"93"},{"value":"2136"}],[{"value":"94"},{"value":"2919"}],[{"value":"95"},{"value":"5121"}],[{"value":"96"},{"value":"3652"}],[{"value":"97"},{"value":"4695"}],[{"value":"98"},{"value":"5890"}],[{"value":"99"},{"value":"4469"}],[{"value":"0"},{"value":"3843"}],[{"value":"1"},{"value":"4571"}],[{"value":"2"},{"value":"4362"}],[{"value":"3"},{"value":"2238"}],[{"value":"4"},{"value":"3402"}],[{"value":"5"},{"value":"6113"}],[{"value":"6"},{"value":"3847"}],[{"value":"7"},{"value":"2534"}],[{"value":"8"},{"value":"3299"}],[{"value":"9"},{"value":"4966"}],[{"value":"10"},{"value":"4067"}],[{"value":"11"},{"value":"3547"}],[{"value":"12"},{"value":"2602"}],[{"value":"13"},{"value":"3427"}],[{"value":"14"},{"value":"1971"}],[{"value":"15"},{"value":"3239"}],[{"value":"16"},{"value":"4791"}],[{"value":"17"},{"value":"3550"}],[{"value":"18"},{"value":"5385"}],[{"value":"19"},{"value":"2835"}],[{"value":"20"},{"value":"3099"}],[{"value":"21"},{"value":"5463"}],[{"value":"22"},{"value":"2855"}],[{"value":"23"},{"value":"2551"}],[{"value":"24"},{"value":"1688"}],[{"value":"25"},{"value":"5363"}],[{"value":"26"},{"value":"3786"}],[{"value":"27"},{"value":"1086"}],[{"value":"28"},{"value":"5031"}],[{"value":"29"},{"value":"4055"}],[{"value":"30"},{"value":"4951"}]],"columnNames":[{"name":"hotel_cluster","index":0,"aggr":"sum"},{"name":"_c1","index":1,"aggr":"sum"}],"rows":[["31","2589"],["32","2886"],["33","4098"],["34","3138"],["35","1463"],["36","4335"],["37","4993"],["38","2618"],["39","3429"],["40","4304"],["41","7653"],["42","5507"],["43","2527"],["44","3036"],["45","2529"],["46","5409"],["47","4357"],["48","7516"],["49","2339"],["50","4842"],["51","3834"],["52","3400"],["53","1345"],["54","2537"],["55","4188"],["56","3877"],["57","3137"],["58","4838"],["59","5794"],["60","2178"],["61","3976"],["62","5258"],["63","3010"],["64","6937"],["65","6650"],["66","2658"],["67","2529"],["68","5107"],["69","3383"],["70","5473"],["71","2253"],["72","4581"],["73","3306"],["74","457"],["75","1600"],["76","3179"],["77","4025"],["78","3699"],["79","2725"],["80","2235"],["81","3497"],["82","4949"],["83","5343"],["84","2715"],["85","3610"],["86","2063"],["87","2570"],["88","1079"],["89","2446"],["90","3959"],["91","10435"],["92","2471"],["93","2136"],["94","2919"],["95","5121"],["96","3652"],["97","4695"],["98","5890"],["99","4469"],["0","3843"],["1","4571"],["2","4362"],["3","2238"],["4","3402"],["5","6113"],["6","3847"],["7","2534"],["8","3299"],["9","4966"],["10","4067"],["11","3547"],["12","2602"],["13","3427"],["14","1971"],["15","3239"],["16","4791"],["17","3550"],["18","5385"],["19","2835"],["20","3099"],["21","5463"],["22","2855"],["23","2551"],["24","1688"],["25","5363"],["26","3786"],["27","1086"],["28","5031"],["29","4055"],["30","4951"]]},"dateCreated":"May 6, 2016 12:26:42 PM","dateStarted":"May 6, 2016 12:45:43 PM","dateFinished":"May 6, 2016 12:45:47 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:166"},{"text":"%md\nIt seems that the classes are a unbalanced, varying from like 500 to 10,000. So, I won't use accuracy to evaluate this. I'll create a train test split.","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:04 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462552099744_1241181091","id":"20160506-122819_991477474","result":{"code":"SUCCESS","type":"HTML","msg":"<p>It seems that the classes are a unbalanced, varying from like 500 to 10,000. So, I won't use accuracy to evaluate this. I'll create a train test split.</p>\n"},"dateCreated":"May 6, 2016 12:28:19 PM","dateStarted":"May 6, 2016 12:45:04 PM","dateFinished":"May 6, 2016 12:45:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:167"},{"text":"// Split the dataset.\nval splitDataset = preprocessedData.randomSplit(Array(0.7, 0.3))\nval train = splitDataset.head\nval test = splitDataset.tail.head","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:45:04 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462496528895_546354989","id":"20160505-210208_1065575005","result":{"code":"SUCCESS","type":"TEXT","msg":"splitDataset: Array[org.apache.spark.sql.DataFrame] = Array([site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int, features: vector, indexed_features: vector, indexed_label: double], [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_...train: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int, features: vector, indexed_features: vector, indexed_label: double]\ntest: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int, features: vector, indexed_features: vector, indexed_label: double]\n"},"dateCreated":"May 5, 2016 9:02:08 PM","dateStarted":"May 6, 2016 12:45:43 PM","dateFinished":"May 6, 2016 12:45:48 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:168"},{"text":"%md\nI'll make a DecisionTreeModel.","authenticationInfo":{},"dateUpdated":"May 6, 2016 12:59:55 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462552211942_1523772319","id":"20160506-123011_1438833581","result":{"code":"SUCCESS","type":"HTML","msg":"<p>I'll make a DecisionTreeModel.</p>\n"},"dateCreated":"May 6, 2016 12:30:11 PM","dateStarted":"May 6, 2016 12:59:52 PM","dateFinished":"May 6, 2016 12:59:52 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:169","focus":true},{"text":"import org.apache.spark.ml.classification.{DecisionTreeClassifier}\n\nval dt = new DecisionTreeClassifier()\n    .setFeaturesCol(\"indexed_features\")\n    .setLabelCol(\"indexed_label\")\n    .setMaxBins(50)\n\nval dtModel = dt.fit(train)","authenticationInfo":{},"dateUpdated":"May 6, 2016 1:01:37 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462486368951_-1088441664","id":"20160505-181248_1340005633","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.classification.DecisionTreeClassifier\ndt: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_4bb16548d198\ndtModel: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_4bb16548d198) of depth 5 with 63 nodes\n"},"dateCreated":"May 5, 2016 6:12:48 PM","dateStarted":"May 6, 2016 1:01:07 PM","dateFinished":"May 6, 2016 1:01:11 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170","focus":true},{"config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462554090181_198835319","id":"20160506-130130_116743486","dateCreated":"May 6, 2016 1:01:30 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1819","dateUpdated":"May 6, 2016 1:03:45 PM","dateFinished":"May 6, 2016 1:02:02 PM","dateStarted":"May 6, 2016 1:02:02 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"DecisionTreeClassificationModel (uid=dtc_4bb16548d198) of depth 5 with 63 nodes\n  If (feature 17 in {0.0,1.0,3.0,4.0,5.0,6.0})\n   If (feature 17 in {1.0,4.0})\n    If (feature 19 <= 1698.0)\n     If (feature 15 <= 12213.0)\n      If (feature 18 <= 162.0)\n       Predict: 4.0\n      Else (feature 18 > 162.0)\n       Predict: 4.0\n     Else (feature 15 > 12213.0)\n      If (feature 15 <= 12372.0)\n       Predict: 43.0\n      Else (feature 15 > 12372.0)\n       Predict: 4.0\n    Else (feature 19 > 1698.0)\n     If (feature 18 <= 169.0)\n      If (feature 18 <= 162.0)\n       Predict: 32.0\n      Else (feature 18 > 162.0)\n       Predict: 75.0\n     Else (feature 18 > 169.0)\n      If (feature 15 <= 8744.0)\n       Predict: 3.0\n      Else (feature 15 > 8744.0)\n       Predict: 22.0\n   Else (feature 17 not in {1.0,4.0})\n    If (feature 19 <= 36.0)\n     If (feature 18 <= 70.0)\n      If (feature 18 <= 58.0)\n       Predict: 13.0\n      Else (feature 18 > 58.0)\n       Predict: 13.0\n     Else (feature 18 > 70.0)\n      If (feature 19 <= 28.0)\n       Predict: 5.0\n      Else (feature 19 > 28.0)\n       Predict: 58.0\n    Else (feature 19 > 36.0)\n     If (feature 17 in {0.0,3.0,5.0})\n      If (feature 18 <= 180.0)\n       Predict: 11.0\n      Else (feature 18 > 180.0)\n       Predict: 65.0\n     Else (feature 17 not in {0.0,3.0,5.0})\n      If (feature 19 <= 357.0)\n       Predict: 11.0\n      Else (feature 19 > 357.0)\n       Predict: 22.0\n  Else (feature 17 not in {0.0,1.0,3.0,4.0,5.0,6.0})\n   If (feature 19 <= 674.0)\n    If (feature 19 <= 627.0)\n     If (feature 19 <= 232.0)\n      If (feature 19 <= 212.0)\n       Predict: 43.0\n      Else (feature 19 > 212.0)\n       Predict: 45.0\n     Else (feature 19 > 232.0)\n      If (feature 19 <= 422.0)\n       Predict: 0.0\n      Else (feature 19 > 422.0)\n       Predict: 0.0\n    Else (feature 19 > 627.0)\n     If (feature 19 <= 628.0)\n      If (feature 16 in {4.0})\n       Predict: 28.0\n      Else (feature 16 not in {4.0})\n       Predict: 28.0\n     Else (feature 19 > 628.0)\n      If (feature 19 <= 636.0)\n       Predict: 78.0\n      Else (feature 19 > 636.0)\n       Predict: 0.0\n   Else (feature 19 > 674.0)\n    If (feature 19 <= 675.0)\n     If (feature 15 <= 44253.0)\n      If (feature 16 in {2.0,3.0,4.0,6.0})\n       Predict: 6.0\n      Else (feature 16 not in {2.0,3.0,4.0,6.0})\n       Predict: 41.0\n     Else (feature 15 > 44253.0)\n      If (feature 15 <= 50882.0)\n       Predict: 1.0\n      Else (feature 15 > 50882.0)\n       Predict: 41.0\n    Else (feature 19 > 675.0)\n     If (feature 19 <= 682.0)\n      If (feature 19 <= 681.0)\n       Predict: 0.0\n      Else (feature 19 > 681.0)\n       Predict: 86.0\n     Else (feature 19 > 682.0)\n      If (feature 19 <= 712.0)\n       Predict: 0.0\n      Else (feature 19 > 712.0)\n       Predict: 0.0\n\n"},"text":"// Print the decision tree model.\nprintln(dtModel.toDebugString)"},{"text":"// Now make predictions with the decision tree.\n\nval dtPredictions = dtModel.transform(test)","authenticationInfo":{},"dateUpdated":"May 6, 2016 1:05:57 PM","config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462546701113_1006606929","id":"20160506-105821_800288641","result":{"code":"SUCCESS","type":"TEXT","msg":"dtPredictions: org.apache.spark.sql.DataFrame = [site_name: int, posa_continent: int, user_location_country: int, user_location_region: int, user_location_city: int, orig_destination_distance: double, user_id: int, is_mobile: int, is_package: int, channel: int, srch_adults_cnt: int, srch_children_cnt: int, srch_rm_cnt: int, srch_destination_id: int, srch_destination_type_id: int, is_booking: int, cnt: int, hotel_continent: int, hotel_country: int, hotel_market: int, hotel_cluster: int, features: vector, indexed_features: vector, indexed_label: double, rawPrediction: vector, probability: vector, prediction: double]\n"},"dateCreated":"May 6, 2016 10:58:21 AM","dateStarted":"May 6, 2016 1:02:27 PM","dateFinished":"May 6, 2016 1:02:27 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:171","focus":true},{"config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462553104814_-1062658096","id":"20160506-124504_548059642","dateCreated":"May 6, 2016 12:45:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1323","dateUpdated":"May 6, 2016 1:05:50 PM","dateFinished":"May 6, 2016 1:02:28 PM","dateStarted":"May 6, 2016 1:02:28 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.sql.DataFrame\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\ngetMetrics: (df: org.apache.spark.sql.DataFrame, label: String, pred: String)org.apache.spark.mllib.evaluation.MulticlassMetrics\n"},"text":"// Evaluate the performance of the model.\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\ndef getMetrics(df: DataFrame,\n    label: String = \"indexed_label\", \n    pred: String = \"prediction\"): MulticlassMetrics = {\n    val pairs = df.select(label, pred).map { row =>\n        (row(0).asInstanceOf[Double], row(1).asInstanceOf[Double])\n    }\n    new MulticlassMetrics(pairs)\n}"},{"config":{"colWidth":6,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462553359596_-504034986","id":"20160506-124919_1167126885","dateCreated":"May 6, 2016 12:49:19 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1554","dateUpdated":"May 6, 2016 1:05:54 PM","dateFinished":"May 6, 2016 1:05:48 PM","dateStarted":"May 6, 2016 1:05:27 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"metrics: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@48442621\nres58: Double = 0.09223618980169972\nres59: Double = 0.09223618980169972\nres60: Double = 0.09223618980169972\nlabels: Array[Double] = Array(0.0, 1.0, 3.0, 4.0, 5.0, 6.0, 11.0, 13.0, 22.0, 28.0, 32.0, 41.0, 43.0, 45.0, 58.0, 65.0, 75.0, 78.0, 86.0)\nPrecision(0.0) = 0.8478048780487805\nPrecision(1.0) = 0.0379045996592845\nPrecision(3.0) = 0.016\nPrecision(4.0) = 0.9837037037037037\nPrecision(5.0) = 0.19778393351800555\nPrecision(6.0) = 0.07661748013620885\nPrecision(11.0) = 0.5472312703583062\nPrecision(13.0) = 0.15282181357006974\nPrecision(22.0) = 0.2695179904955872\nPrecision(28.0) = 0.995729537366548\nPrecision(32.0) = 0.06231003039513678\nPrecision(41.0) = 0.5466893039049237\nPrecision(43.0) = 0.2727272727272727\nPrecision(45.0) = 0.18584825234441602\nPrecision(58.0) = 0.2434077079107505\nPrecision(65.0) = 0.34530706836616454\nPrecision(75.0) = 0.060453400503778336\nPrecision(78.0) = 0.2010443864229765\nPrecision(86.0) = 0.47781065088757396\nRecall(0.0) = 0.061721672427671764\nRecall(1.0) = 0.25722543352601157\nRecall(3.0) = 0.1827956989247312\nRecall(4.0) = 0.18406948807983736\nRecall(5.0) = 0.05489773950484392\nRecall(6.0) = 0.16584766584766586\nRecall(11.0) = 0.044418592353656604\nRecall(13.0) = 0.0705503512880562\nRecall(22.0) = 0.05981618200994425\nRecall(28.0) = 0.25792772861356933\nRecall(32.0) = 0.07288888888888889\nRecall(41.0) = 0.18029115341545351\nRecall(43.0) = 0.09780621572212066\nRecall(45.0) = 0.2704714640198511\nRecall(58.0) = 0.11080332409972299\nRecall(65.0) = 0.09228863425209043\nRecall(75.0) = 0.18532818532818532\nRecall(78.0) = 0.240625\nRecall(86.0) = 0.125\nFPR(0.0) = 0.006617459913463986\nFPR(1.0) = 0.020059672864830305\nFPR(3.0) = 0.018541507794349762\nFPR(4.0) = 3.230922869059508E-4\nFPR(5.0) = 0.013601735912152324\nFPR(6.0) = 0.014507873664687105\nFPR(11.0) = 0.007389764909781072\nFPR(13.0) = 0.012196012561162638\nFPR(22.0) = 0.010120105715602457\nFPR(28.0) = 5.579526856122601E-5\nFPR(32.0) = 0.011034112755398577\nFPR(41.0) = 0.004881705488719055\nFPR(43.0) = 0.007804664563540546\nFPR(45.0) = 0.008515077482746937\nFPR(58.0) = 0.006733216600176905\nFPR(65.0) = 0.005148955172193819\nFPR(75.0) = 0.006619284655859309\nFPR(78.0) = 0.0054487179487179484\nFPR(86.0) = 0.003198159020076828\nF1-Score(0.0) = 0.11506631650961092\nF1-Score(1.0) = 0.06607275426874536\nF1-Score(3.0) = 0.02942449156209433\nF1-Score(4.0) = 0.31011131003347087\nF1-Score(5.0) = 0.08594126143476168\nF1-Score(6.0) = 0.1048136645962733\nF1-Score(11.0) = 0.08216766115621638\nF1-Score(13.0) = 0.09653514920889245\nF1-Score(22.0) = 0.09790382244143032\nF1-Score(28.0) = 0.4097232391272515\nF1-Score(32.0) = 0.06718557968045884\nF1-Score(41.0) = 0.2711578947368421\nF1-Score(43.0) = 0.14397847050908275\nF1-Score(45.0) = 0.2203132895401718\nF1-Score(58.0) = 0.15228426395939085\nF1-Score(65.0) = 0.14565004887585534\nF1-Score(75.0) = 0.09116809116809116\nF1-Score(78.0) = 0.2190611664295875\nF1-Score(86.0) = 0.198159509202454\n"},"text":"val metrics = getMetrics(dtPredictions)\nmetrics.precision\nmetrics.recall\nmetrics.fMeasure\nval labels = metrics.labels\nlabels.foreach { l =>\n  println(s\"Precision($l) = \" + metrics.precision(l))\n}\n\n// Recall by label\nlabels.foreach { l =>\n  println(s\"Recall($l) = \" + metrics.recall(l))\n}\n\n// False positive rate by label\nlabels.foreach { l =>\n  println(s\"FPR($l) = \" + metrics.falsePositiveRate(l))\n}\n\n// F-measure by label\nlabels.foreach { l =>\n  println(s\"F1-Score($l) = \" + metrics.fMeasure(l))\n}"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1462553498913_-392626371","id":"20160506-125138_2084213421","dateCreated":"May 6, 2016 12:51:38 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1645"}],"name":"ExpediaChallenge","id":"2BJ53JR7B","angularObjects":{"2BHWR53RN:shared_process":[],"2BK5DDM4J:shared_process":[],"2BKWKEWDS:shared_process":[],"2BHCSHN44:shared_process":[],"2BKC81PSD:shared_process":[],"2BJZWNTCG:shared_process":[],"2BKVUM25G:shared_process":[],"2BH3AMZ8Z:shared_process":[],"2BM7Q8B5Q:shared_process":[],"2BH6XH8E1:shared_process":[],"2BJKFFD9Z:shared_process":[],"2BHRJQXH7:shared_process":[],"2BHDNTQKH:shared_process":[],"2BJQAPGJX:shared_process":[],"2BJHY91FX:shared_process":[],"2BKPJ3DTK:shared_process":[],"2BHTSEV87:shared_process":[],"2BMR1CQKS:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}